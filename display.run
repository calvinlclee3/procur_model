print("****************************** RUN START ******************************");
display component_counts;

display A_die * 1E6;
display P_die;
display core_freq * 1E-9;
display perf;

print("==============================");

display core_freq_max * 1E-9, core_freq * 1E-9, core_freq_min * 1E-9;

display P_max, P_die;

display A_die * 1E6, (bump_pitch**2) * (power_bump_count + mc_bump_count + io_bump_count) * 1E6;

display max_wire, component_counts['mc'] * wires_per_mc;

display compute_throughput, arithmetic_intensity, peak_bw;

display core_freq * 1E-9, core_freq_max * 1E-9, core_freq_nominal * 1E-9, core_freq_min * 1E-9, core_freq_area_multiplier;

display die_voltage, die_voltage_max, die_voltage_nominal, core_power;

print("==============================");

display l3_hit_rate, l3_to_mc_ratio;

display component_counts['l3'], component_counts['mc'];

display l3_count_dictated, mc_count_dictated;

display l3_count_effective, mc_count_effective;

print("****************************** RUN   END ******************************");

# ****************************** SAVE TO FILE ******************************

print("****************************** RUN START ******************************") >> min_metric_metric.txt;
display component_counts >> min_metric_metric.txt;

display A_die * 1E6 >> min_metric_metric.txt;
display P_die >> min_metric_metric.txt;
display core_freq * 1E-9 >> min_metric_metric.txt;
display perf >> min_metric_metric.txt;

print("==============================") >> min_metric_metric.txt;

display core_freq_max * 1E-9, core_freq * 1E-9, core_freq_min * 1E-9 >> min_metric_metric.txt;

display P_max, P_die >> min_metric_metric.txt;

display A_die * 1E6, (bump_pitch**2) * (power_bump_count + mc_bump_count + io_bump_count) * 1E6 >> min_metric_metric.txt;

display max_wire, component_counts['mc'] * wires_per_mc >> min_metric_metric.txt;

display compute_throughput, arithmetic_intensity, peak_bw >> min_metric_metric.txt;

display core_freq * 1E-9, core_freq_max * 1E-9, core_freq_nominal * 1E-9, core_freq_min * 1E-9, core_freq_area_multiplier >> min_metric_metric.txt;

display die_voltage, die_voltage_max, die_voltage_nominal, core_power >> min_metric_metric.txt;

print("==============================") >> min_metric_metric.txt;

display l3_hit_rate, l3_to_mc_ratio >> min_metric_metric.txt;

display component_counts['l3'], component_counts['mc'] >> min_metric_metric.txt;

display l3_count_dictated, mc_count_dictated >> min_metric_metric.txt;

display l3_count_effective, mc_count_effective >> min_metric_metric.txt;

print("****************************** RUN   END ******************************") >> min_metric_metric.txt;
