# Two MINLP solvers that is currently working (300 var bound): Couenne and Bonmin
# https://github.com/coin-or/Bonmin
# https://github.com/coin-or/Couenne
# Bonmin is a local MINLP solver, Couenne is a global NLP/MINLP solver. 
# Typically Bonmin can solve larger problems than Couenne, but you get local solutions.

# option solver bonmin;


reset;
option solver couenne;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 25E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 50E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 100E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 200E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 500E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 800E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 1600E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 3200E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 6400E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 10000E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 750E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 1000E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 1500E6;
solve;
commands display_py.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let workset_size := 2000E6;
solve;
commands display_py.run;