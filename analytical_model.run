reset;

# Two MINLP solvers that is currently working (300 var bound): Couenne and Bonmin
# https://github.com/coin-or/Bonmin
# https://github.com/coin-or/Couenne
# Bonmin is a local MINLP solver, Couenne is a global NLP/MINLP solver. 
# Typically Bonmin can solve larger problems than Couenne, but you get local solutions.
option solver couenne;
# option solver bonmin;

model analytical_model.mod;
data analytical_model.dat;
solve;
commands display.run;
# let {j in 1.._nvars} _var[j] := _var[j].init0;


reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 2.5;
solve;
commands display.run;


reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 2.4;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 2.3;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 2.2;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 2.1;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 2.0;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.9;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.8;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.7;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.6;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.5;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.4;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.3;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.2;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.1;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 1.0;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 0.9;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 0.8;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 0.7;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 0.6;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let die_voltage := 0.5;
solve;
commands display.run;
