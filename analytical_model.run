reset;

# Two MINLP solvers that is currently working (300 var bound): Couenne and Bonmin
# https://github.com/coin-or/Bonmin
# https://github.com/coin-or/Couenne
# Bonmin is a local MINLP solver, Couenne is a global NLP/MINLP solver. 
# Typically Bonmin can solve larger problems than Couenne, but you get local solutions.
option solver couenne;
# option solver bonmin;

model analytical_model.mod;
data analytical_model.dat;
solve;
commands display.run;


reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 450;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 400;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 350;
solve;
commands display.run;


reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 300;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 280;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 270;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 260;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 250;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 240;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 230;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 220;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 210;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 200;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 190;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 180;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 170;
solve;
commands display.run;


reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 160;
solve;
commands display.run;

reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 150;
solve;
commands display.run;


reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 140;
solve;
commands display.run;


reset;
model analytical_model.mod;
data analytical_model.dat;
let PowerUB := 130;
solve;
commands display.run;